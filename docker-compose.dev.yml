services:
  postgres-dev:
    container_name: zephyr-postgres-dev
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=zephyr
      - PGDATA=/var/lib/postgresql/data/pgdata
      - LANG=en_US.UTF-8
      - LANGUAGE=en_US:en
      - LC_ALL=en_US.UTF-8
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./docker/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d zephyr"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis-dev:
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-zephyrredis}
    volumes:
      - redis_data_dev:/data
    networks:
      - dev_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-zephyrredis}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio-dev:
    container_name: zephyr-minio-dev
    build:
      context: .
      dockerfile: ./docker/minio/Dockerfile
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data_dev:/data
    networks:
      - dev_network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

networks:
  dev_network:
    driver: bridge

volumes:
  postgres_data_dev:
  redis_data_dev:
  minio_data_dev:
