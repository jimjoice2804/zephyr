name: Version Bump

on:
  push:
    branches:
      - development

jobs:
  version-bump:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: development

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: '10.2.0'

      - name: Determine version bump type
        id: bump-type
        run: |
          if echo "${{ github.event.head_commit.message }}" | grep -q "major:"; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "${{ github.event.head_commit.message }}" | grep -q "minor:"; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Update version in root package.json
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          if [ "${{ steps.bump-type.outputs.type }}" = "major" ]; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif [ "${{ steps.bump-type.outputs.type }}" = "minor" ]; then
            NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
          else
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi
          
          echo "Updating version from $CURRENT_VERSION to $NEW_VERSION"
          
          # Update root package.json
          sed -i "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" package.json
          
          # Update apps/web/package.json
          sed -i "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" apps/web/package.json
          
          # Update packages/**/package.json
          for pkg in packages/*/package.json; do
            if [ -f "$pkg" ]; then
              sed -i "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" "$pkg"
            fi
          done
          
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add package.json apps/web/package.json packages/*/package.json
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }} [skip ci]"
          git push origin development
