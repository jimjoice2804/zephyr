name: Version Bump

on:
  push:
    branches:
      - development

jobs:
  version-bump:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: development

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: '10.2.0'

      - name: Install dependencies
        run: pnpm install

      - name: Run lint and format
        run: |
          pnpm run lint
          pnpm run format

      - name: Update version in package.json files
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          # Remove any existing -dev suffix for clean calculation
          PATCH=$(echo $PATCH | sed 's/-dev//')
          
          # Simply increment patch version
          if [ $PATCH -ge 40 ]; then
            PATCH=1
          else
            PATCH=$((PATCH + 1))
          fi
          
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}-dev"
          echo "Updating version from $CURRENT_VERSION to $NEW_VERSION"
          
          # Update root package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" package.json
          
          # Update apps/web/package.json
          if [ -f "apps/web/package.json" ]; then
            sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" apps/web/package.json
          fi
          
          # Update all package.json files in packages directory
          find packages -name "package.json" -type f -exec sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" {} \;
          
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add package.json
          if [ -f "apps/web/package.json" ]; then
            git add apps/web/package.json
          fi
          git add packages/*/package.json
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }} [skip ci]"
          git push origin development
