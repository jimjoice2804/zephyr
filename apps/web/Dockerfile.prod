FROM node:20-alpine AS builder

RUN apk add --no-cache \
  libc6-compat \
  python3 \
  make \
  g++

WORKDIR /app

RUN corepack enable && corepack prepare pnpm@latest --activate

ENV NODE_ENV=production \
  NEXT_TELEMETRY_DISABLED=1 \
  HUSKY=0 \
  SKIP_HUSKY=1

COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json ./

COPY packages/config/package.json ./packages/config/
COPY packages/db/package.json ./packages/db/
COPY packages/ui/package.json ./packages/ui/
COPY packages/auth/package.json ./packages/auth/
COPY apps/web/package.json ./apps/web/

RUN pnpm install --frozen-lockfile --prod=false

COPY packages/config ./packages/config
COPY packages/db ./packages/db
COPY packages/ui ./packages/ui
COPY packages/auth ./packages/auth
COPY apps/web ./apps/web

RUN cd packages/db && \
  pnpm prisma generate && \
  cd ../.. && \
  cp -r node_modules/.pnpm/@prisma+client@*/node_modules/@prisma/client node_modules/@prisma/ && \
  cp -r node_modules/.pnpm/prisma@*/node_modules/prisma node_modules/

RUN pnpm turbo build --filter=@zephyr/web...

FROM node:20-alpine AS runner

WORKDIR /app

RUN apk add --no-cache \
  curl \
  libgcc \
  libstdc++

RUN addgroup --system --gid 1001 nodejs && \
  adduser --system --uid 1001 nextjs

RUN mkdir -p /app/.next && \
  chown -R nextjs:nodejs /app

COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/public ./apps/web/public
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/@prisma ./node_modules/@prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/prisma ./node_modules/prisma

ENV NODE_ENV=production \
  PORT=3000 \
  NEXT_TELEMETRY_DISABLED=1 \
  HOSTNAME=0.0.0.0

USER nextjs

HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

EXPOSE 3000

CMD ["node", "apps/web/server.js"]
