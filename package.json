{
  "name": "zephyr",
  "displayName": "Zephyr",
  "version": "2.0.35-dev",
  "description": "A seamless, next-gen social experience built for speed, privacy, and effortless connection.",
  "author": "parazeeknova",
  "license": "AGPL-3.0",
  "homepage": "https://zephyyrr.in",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/parazeeknova/zephyr"
  },
  "readme": ".github/README.md",
  "keywords": [
    "socialmedia",
    "aggregator",
    "zephyr"
  ],
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "check": "biome check --write .",
    "dev": "turbo dev",
    "build": "bun run check && turbo build",
    "postinstall": "cd packages/db && bunx prisma generate",
    "dep:check": "bunx sherif@latest",
    "dep:fix": "bunx sherif@latest --fix",
    "env:check": "bun scripts/check-env.js",
    "env:local": "bun -e \"const fs=require('fs');const path=require('path');fs.copyFileSync('.env.example','.env');fs.copyFileSync(path.join('apps','web','.env.example'),path.join('apps','web','.env'));fs.copyFileSync(path.join('packages','db','.env.example'),path.join('packages','db','.env'));console.log('✅ Environment files copied successfully');\"",
    "prepare": "husky",
    "clean": "bun -e \"const fs = require('fs'); const path = require('path'); function rm(dir) { if (fs.existsSync(dir)) { console.log('Deleting ' + dir); fs.rmSync(dir, { recursive: true, force: true }); } } function findAndDelete(folder) { const walk = (dir) => { const files = fs.readdirSync(dir); files.forEach(file => { const fullPath = path.join(dir, file); if (fs.statSync(fullPath).isDirectory()) { if (file === folder) { rm(fullPath); } else { walk(fullPath); } } }); }; walk(process.cwd()); } ['node_modules', '.next', '.turbo'].forEach(findAndDelete); console.log('✅ Cleanup completed');\"",
    "db:up": "cd packages/db && bunx prisma generate && bunx prisma db push",
    "docker:logs": "docker compose -f docker-compose.dev.yml logs -f",
    "docker:dev": "docker compose -f docker-compose.dev.yml --profile init up -d --build",
    "docker:dev-noinit": "docker compose -f docker-compose.dev.yml up --build",
    "docker:down": "docker compose -f docker-compose.dev.yml down",
    "docker:clean:dev": "docker compose -f docker-compose.dev.yml down -v && docker volume rm zephyr_postgres_data_dev zephyr_redis_data_dev zephyr_minio_data_dev && rm -f .dev-init"
  },
  "devDependencies": {
    "@biomejs/biome": "2.2.4",
    "@types/node": "^24.6.1",
    "@types/react": "^19.1.16",
    "@types/react-dom": "^19.1.9",
    "dotenv": "^17.2.3",
    "husky": "^9.1.7",
    "react-markdown": "9.0.3",
    "turbo": "^2.5.8",
    "typescript": "^5.9.3",
    "ultracite": "5.4.5"
  },
  "trustedDependencies": [
    "@prisma/client",
    "@prisma/engines",
    "@tailwindcss/oxide",
    "@tsparticles/engine",
    "esbuild",
    "prisma",
    "sharp"
  ],
  "packageManager": "bun@1.2.23"
}
